version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgis/postgis:15-3.3
    container_name: subway-lettuce-postgres-staging
    environment:
      POSTGRES_DB: subway_lettuce_tracker_staging
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: subway-lettuce-redis-staging
    command: redis-server --appendonly yes
    volumes:
      - redis_staging_data:/data
    ports:
      - "6380:6379"
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: subway-lettuce-backend-staging
    environment:
      NODE_ENV: staging
      PORT: 5000
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/subway_lettuce_tracker_staging
      REDIS_URL: redis://redis:6379
      FRONTEND_URL: ${STAGING_FRONTEND_URL}
      GOOGLE_MAPS_API_KEY: ${STAGING_GOOGLE_MAPS_API_KEY}
      JWT_SECRET: ${STAGING_JWT_SECRET}
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 200
      LOG_LEVEL: debug
    ports:
      - "5001:5000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
      args:
        VITE_API_URL: ${STAGING_VITE_API_URL}
        VITE_GOOGLE_MAPS_API_KEY: ${STAGING_GOOGLE_MAPS_API_KEY}
        VITE_ENVIRONMENT: staging
    container_name: subway-lettuce-frontend-staging
    ports:
      - "8081:8080"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_staging_data:
  redis_staging_data:

networks:
  default:
    name: subway-lettuce-staging-network